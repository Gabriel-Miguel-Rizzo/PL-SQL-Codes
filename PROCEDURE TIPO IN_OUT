-- Utilizando Parametros tipo OUT 

CREATE OR REPLACE PROCEDURE Z_INSERE_ZTAB_GABTESTE2
  (pid_cliente          IN Z_TABELA_EXERCICIO.Id_Cliente%type,
   pnome                OUT Z_TABELA_EXERCICIO.Nome%type,
   pnumero              OUT Z_TABELA_EXERCICIO.Numero%type,
   pCNPJ                OUT Z_TABELA_EXERCICIO.Cnpj%type,
   pvalor_investido     OUT Z_TABELA_EXERCICIO.Valor_Investido%type )
IS 
  -- Nenhuma variável declarada
BEGIN
  
  SELECT
    
    te.nome,
    te.numero,
    te.cnpj,
    te.valor_investido
    
  INTO 
  
            
   pnome ,             
   pnumero,             
   pCNPJ ,            
   pvalor_investido   
     
  FROM Z_TABELA_EXERCICIO te
  WHERE id_cliente = pid_cliente;
  
EXCEPTION
  
  WHEN NO_DATA_FOUND THEN
     RAISE_APPLICATION_ERROR(-20001, 'Empregado Não existe: ' || pid_cliente);
  WHEN OTHERS THEN
     RAISE_APPLICATION_ERROR(-20002, 'Erro Oracle ' || SQLCODE || SQLERRM);
END;

/*-- Executando procedure parametro Tipo OUT

DECLARE 
  z_tabela_exercicio_record  Z_TABELA_EXERCICIO%ROWTYPE;
  
BEGIN
  Z_INSERE_ZTAB_GABTESTE2(120, z_tabela_exercicio_record.nome, z_tabela_exercicio_record.numero, z_tabela_exercicio_record.cnpj,
    z_tabela_exercicio_record.valor_investido);
    DBMS_OUTPUT.PUT_LINE(z_tabela_exercicio_record.nome || ' ' || 
                         z_tabela_exercicio_record.numero || ' - ' ||
                         z_tabela_exercicio_record.cnpj || ' - ' ||
                         z_tabela_exercicio_record.valor_investido );
END;

-- Utilizando Parametros tipo OUT com opção NOCOPY

CREATE OR REPLACE PROCEDURE PRC_CONSULTA_EMPREGADO
  (pemployee_id   IN NUMBER,
   pfirst_name    OUT NOCOPY VARCHAR2,
   plast_name     OUT NOCOPY VARCHAR2,
   pemail         OUT NOCOPY VARCHAR2,
   pphone_number  OUT NOCOPY VARCHAR2,
   phire_date     OUT NOCOPY DATE,
   pjob_id        OUT NOCOPY VARCHAR2,
   pSALARY        OUT NOCOPY NUMBER,
   pCOMMISSION_PCT OUT NOCOPY NUMBER,
   pMANAGER_ID    OUT NOCOPY NUMBER,
   pDEPARTMENT_ID OUT NOCOPY NUMBER)
IS 
BEGIN
  SELECT
    first_name,
    last_name,
    email,
    phone_number,
    hire_date,
    job_id,
    salary,
    commission_pct,
    manager_id,
    department_id
  INTO 
    pfirst_name,
    plast_name,
    pemail,
    pphone_number,
    phire_date,
    pjob_id,
    psalary,
    pcommission_pct,
    pmanager_id,
    pdepartment_id
  FROM employees
  WHERE employee_id = pemployee_id;
  
EXCEPTION
  WHEN NO_DATA_FOUND THEN
     RAISE_APPLICATION_ERROR(-20001, 'Empregado Não existe: ' || pemployee_id);
  WHEN OTHERS THEN
     RAISE_APPLICATION_ERROR(-20002, 'Erro Oracle ' || SQLCODE || SQLERRM);
END;

-- Executando procedure parametro Tipo OUT

SET SERVEROUTPUT ON
SET VERIFY OFF
DECLARE 
  employees_record  employees%ROWTYPE;
BEGIN
  PRC_CONSULTA_EMPREGADO(100, employees_record.first_name, employees_record.last_name, employees_record.email,
    employees_record.phone_number, employees_record.hire_date, employees_record.job_id, employees_record.salary, 
    employees_record.commission_pct, employees_record.manager_id, employees_record.department_id);
    DBMS_OUTPUT.PUT_LINE(employees_record.first_name || ' ' || 
                         employees_record.last_name || ' - ' ||
                         employees_record.department_id || ' - ' ||
                         employees_record.job_id || ' - ' ||
                         employees_record.phone_number || ' - ' ||
                         LTRIM(TO_CHAR(employees_record.salary, 'L99G999G999D99')));
END;*/
